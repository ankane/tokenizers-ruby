name: release

on:
  workflow_dispatch:

jobs:
  ci-data:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.fetch.outputs.result }}
    steps:
      - id: fetch
        uses: oxidize-rb/actions/fetch-ci-data@v1
        with:
          supported-ruby-platforms: |
            exclude:
              - x64-mingw32

  release:
    needs: ci-data
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJSON(needs.ci-data.outputs.result).supported-ruby-platforms }}
    runs-on: ubuntu-latest
    name: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: 3.3
          bundler-cache: true
          cargo-cache: true
      - if: ${{ matrix.platform != 'x64-mingw-ucrt' }}
        run: |
          cargo install --locked --git https://github.com/ankane/cargo-3pl
          git clone https://github.com/ankane/3pl-source.git
          rust_target="$(bundle exec ruby -rrb_sys -e 'puts RbSys::ToolchainInfo.new("${{ matrix.platform }}").rust_target')"
          cargo 3pl --target $rust_target --require-files --source 3pl-source > LICENSE-THIRD-PARTY.txt
      - uses: oxidize-rb/actions/cross-gem@v1
        id: cross-gem
        with:
          platform: ${{ matrix.platform }}
          ruby-versions: "3.3,3.2,3.1"
      - uses: actions/upload-artifact@v3
        with:
          name: cross-gem-${{ matrix.platform }}
          path: ${{ steps.cross-gem.outputs.gem-path }}

  test-macos:
    needs: release
    runs-on: macos-latest
    strategy:
      matrix:
        platform: [x86_64-darwin]
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
      - uses: actions/download-artifact@v3
        with:
          name: cross-gem-${{ matrix.platform }}
      - name: Test
        run: |
          echo "::group::Install gem"
          gem install --no-document --verbose tokenizers-*.gem
          echo "::endgroup::"
          ruby -rtokenizers -e 'print Tokenizers.from_pretrained("bert-base-cased").encode("Standing on the moon, I see a shadow on the sun").tokens'

  test-windows:
    needs: release
    runs-on: windows-latest
    strategy:
      matrix:
        platform: [x64-mingw-ucrt]
    steps:
      - uses: actions/checkout@v4
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
      - uses: actions/download-artifact@v3
        with:
          name: cross-gem-${{ matrix.platform }}
      - name: Test
        shell: bash
        run: |
          echo "::group::Install gem"
          gem install --no-document --verbose tokenizers-*.gem
          echo "::endgroup::"
          ruby -rtokenizers -e 'print Tokenizers.from_pretrained("bert-base-cased").encode("Between the dawn and the dark of night").tokens'

  test-linux:
    needs: release
    strategy:
      fail-fast: false
      matrix:
        platform:
          - arm-linux
          - x86_64-linux
          - x86_64-linux-musl
          - aarch64-linux
          - aarch64-linux-musl
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: actions/download-artifact@v3
        with:
          name: cross-gem-${{ matrix.platform }}
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
      - name: Test
        run: |
          gem install rb_sys --version 0.9.94
          docker_platform="$(ruby -rrb_sys -e 'puts RbSys::ToolchainInfo.new("${{ matrix.platform }}").docker_platform')"
          gem_path="$(find . -name "tokenizers-*.gem" | head -n 1)"
          if [ ! -f "$gem_path" ]; then
            echo "Tokenizers gem not found at $gem_path"
            exit 1
          fi
          if [[ "${{ matrix.platform }}" == *-musl ]]; then
            base_image="ruby:3-alpine"
          else
            base_image="ruby:3-slim"
          fi
          cat > Dockerfile.test <<EOF
          FROM $base_image
          COPY $gem_path /tmp/tokenizers.gem
          RUN gem install --no-document --verbose /tmp/tokenizers.gem
          RUN ruby -rtokenizers -e 'print Tokenizers.from_pretrained("bert-base-cased").encode("What a long strange trip its been").tokens'
          EOF
          docker buildx build --platform $docker_platform -t test-${{ matrix.platform }} -f Dockerfile.test .
